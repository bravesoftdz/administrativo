package br.com.msystem.vo;
// Generated 12/03/2013 13:33:49 by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Agenda generated by hbm2java
 */
@Entity
@Table(name="agenda"
    ,catalog="handy"
    , uniqueConstraints = @UniqueConstraint(columnNames={"DATA_AGENDA", "VENDEDOR_SQ"}) 
)
public class Agenda  implements java.io.Serializable {


     private int agendaSq;
     private Clientes clientes;
     private Vendedores vendedores;
     private Date dataAgenda;
     private String observacao;
     private String realizado;
     private Integer usuarioPaiSq;

    public Agenda() {
    }

	
    public Agenda(Clientes clientes, Vendedores vendedores, Date dataAgenda) {
        this.clientes = clientes;
        this.vendedores = vendedores;
        this.dataAgenda = dataAgenda;
    }
    public Agenda(Clientes clientes, Vendedores vendedores, Date dataAgenda, String observacao, String realizado, Integer usuarioPaiSq) {
       this.clientes = clientes;
       this.vendedores = vendedores;
       this.dataAgenda = dataAgenda;
       this.observacao = observacao;
       this.realizado = realizado;
       this.usuarioPaiSq = usuarioPaiSq;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="AGENDA_SQ", unique=true, nullable=false)
    public int getAgendaSq() {
        return this.agendaSq;
    }
    
    public void setAgendaSq(int agendaSq) {
        this.agendaSq = agendaSq;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENTE_SQ", nullable=false)
    public Clientes getClientes() {
        return this.clientes;
    }
    
    public void setClientes(Clientes clientes) {
        this.clientes = clientes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VENDEDOR_SQ", nullable=false)
    public Vendedores getVendedores() {
        return this.vendedores;
    }
    
    public void setVendedores(Vendedores vendedores) {
        this.vendedores = vendedores;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DATA_AGENDA", nullable=false, length=19)
    public Date getDataAgenda() {
        return this.dataAgenda;
    }
    
    public void setDataAgenda(Date dataAgenda) {
        this.dataAgenda = dataAgenda;
    }

    
    @Column(name="OBSERVACAO", length=65535)
    public String getObservacao() {
        return this.observacao;
    }
    
    public void setObservacao(String observacao) {
        this.observacao = observacao;
    }

    
    @Column(name="REALIZADO", length=1)
    public String getRealizado() {
        return this.realizado;
    }
    
    public void setRealizado(String realizado) {
        this.realizado = realizado;
    }

    
    @Column(name="USUARIO_PAI_SQ")
    public Integer getUsuarioPaiSq() {
        return this.usuarioPaiSq;
    }
    
    public void setUsuarioPaiSq(Integer usuarioPaiSq) {
        this.usuarioPaiSq = usuarioPaiSq;
    }




}


